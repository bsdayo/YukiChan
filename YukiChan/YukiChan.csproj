<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <Version>1.3.0</Version>
        <OutputType>Exe</OutputType>
        <TargetFramework>net6.0</TargetFramework>
        <PublishSingleFile>True</PublishSingleFile>
        <IncludeNativeLibrariesForSelfExtract>True</IncludeNativeLibrariesForSelfExtract>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <Authors>b1acksoil</Authors>
        <Description>Simple QQ bot using Konata.Core</Description>
        <RepositoryUrl>https://github.com/b1acksoil/YukiChan</RepositoryUrl>
        <PackageProjectUrl>https://github.com/b1acksoil/YukiChan</PackageProjectUrl>
        <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="../Konata.Core/Konata.Core/Konata.Core.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="ArcaeaUnlimitedAPI.Lib" Version="1.0.1"/>
        <PackageReference Include="BiliSharp" Version="0.0.2"/>
        <PackageReference Include="Genbox.WolframAlpha" Version="3.0.0-alpha3"/>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" Version="4.2.0"/>
        <PackageReference Include="SkiaSharp" Version="2.88.0"/>
        <PackageReference Include="SkiaSharp.NativeAssets.Linux" Version="2.88.0"/>
        <PackageReference Include="sqlite-net-pcl" Version="1.8.116"/>
    </ItemGroup>

    <ItemGroup>
        <Reference Include="MalodyInfoQuery">
            <HintPath>../Libraries/MalodyInfoQuery.dll</HintPath>
        </Reference>
    </ItemGroup>

    <Target Name="GetBuildStamp" BeforeTargets="GenerateBuildStamp" Condition="'$(BuildHash)' == ''">
        <PropertyGroup>
            <BuildStampFile>$(IntermediateOutputPath)BuildStamp</BuildStampFile>
        </PropertyGroup>

        <!-- Git Branch -->
        <Exec Command="git -C $(ProjectDir) rev-parse --abbrev-ref HEAD &gt; $(BuildStampFile)"/>

        <!-- Git Commit Hash -->
        <Exec Command="git -C $(ProjectDir) rev-parse HEAD &gt;&gt; $(BuildStampFile)"/>

        <ReadLinesFromFile File="$(BuildStampFile)">
            <Output TaskParameter="Lines" ItemName="Stamp"/>
        </ReadLinesFromFile>

        <PropertyGroup>
            <BuildStamp>@(Stamp)</BuildStamp>
        </PropertyGroup>
    </Target>

    <!-- Generate Build Stamp -->
    <Target Name="GenerateBuildStamp" BeforeTargets="CoreCompile">
        <PropertyGroup>
            <CustomAssemblyInfoFile>$(IntermediateOutputPath)CustomAssemblyInfo.cs</CustomAssemblyInfoFile>
        </PropertyGroup>

        <ItemGroup>
            <Compile Include="$(CustomAssemblyInfoFile)"/>
        </ItemGroup>

        <ItemGroup>
            <AssemblyAttributes Include="AssemblyMetadata">
                <_Parameter1>BuildStamp</_Parameter1>
                <_Parameter2>$(BuildStamp)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>

        <WriteCodeFragment Language="C#" OutputFile="$(CustomAssemblyInfoFile)" AssemblyAttributes="@(AssemblyAttributes)"/>
    </Target>
</Project>
